{"version":3,"sources":["accessories/generateDots.js","components/Perlin.js","App.js","reportWebVitals.js","index.js"],"names":["generateDots","options","xDots","yDots","width","height","dots","x","y","push","z","h","s","l","size","Perlin","props","density","zMax","initialState","noiseMap","noise","Noise","Math","random","xoff","yoff","yRot","xRot","useReducer","state","action","newState","type","map","dot","simplex2","floor","payload","dispatch","requestRef","useRef","previousTimeRef","animate","useCallback","time","undefined","current","requestAnimationFrame","useEffect","cancelAnimationFrame","window","addEventListener","e","clientX","innerWidth","relativeY","clientY","innerHeight","className","style","position","backgroundColor","boxShadow","overflow","zIndex","margin","perspective","top","left","transform","transformStyle","length","index","borderRadius","backgroundImage","defaultProps","App","useState","setWidth","setNoise","onresize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1201b349.chunk.js","sourcesContent":["function generateDots(options = { xDots: 10, yDots: 10, width: 100, height: 100}) {\r\n    const { xDots, yDots, width, height } = options;\r\n    const dots = [];\r\n    for (let x = 0; x <= xDots; x++) {\r\n        for (let y = 0; y <= yDots; y++) {\r\n            dots.push({x: width*x/xDots, y: height*y/yDots, z:0, h: 260, s:50, l:50, size: 2});\r\n        }\r\n    }\r\n    return dots;\r\n}\r\nexport default generateDots;","import { useEffect, useRef, useReducer, useCallback } from \"react\";\r\nimport generateDots from \"../accessories/generateDots.js\";\r\nimport noise from \"noisejs\";\r\nfunction Perlin(props) {\r\n  const { density, width, height, zMax } = props;\r\n  const xDots = (density * width) / 100;\r\n  const yDots = (density * height) / 100;\r\n  const initialState = {\r\n    noiseMap: new noise.Noise(Math.random()),\r\n    xoff: 0,\r\n    yoff: 0,\r\n    dots: generateDots({ xDots, yDots, width, height }),\r\n    yRot: 0,\r\n    xRot: 65,\r\n  };\r\n  const reducer = (state, action) => {\r\n    let newState = state;\r\n    switch (action.type) {\r\n      case \"UPDATE_DOTS\":\r\n        newState = { ...state };\r\n        newState.dots = [...newState.dots].map((dot) => {\r\n          const z =\r\n            zMax *\r\n            state.noiseMap.simplex2(\r\n              (dot.x + state.xoff) / 100,\r\n              (dot.y + state.yoff) / 100\r\n            );\r\n          return {\r\n            ...dot,\r\n            z,\r\n            l: Math.floor((50 * (z + zMax)) / zMax),\r\n            size: state.noiseMap.simplex2(dot.y / 100, dot.x / 100) + 2,\r\n          };\r\n        });\r\n        newState.xoff = state.xoff + 1;\r\n        newState.yoff = state.yoff + 1;\r\n        return newState;\r\n      case \"NEW_DOTS\":\r\n        newState = { ...state };\r\n        newState.dots = generateDots({ xDots, yDots, width, height });\r\n        return newState;\r\n      case \"CHANGE_ROTATION\":\r\n        newState = { ...state };\r\n        newState.yRot = action.payload.yRot;\r\n        newState.xRot = action.payload.xRot;\r\n        return newState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const requestRef = useRef();\r\n  const previousTimeRef = useRef();\r\n\r\n  const animate = useCallback((time) => {\r\n    if (previousTimeRef.current !== undefined) {\r\n      dispatch({ type: \"UPDATE_DOTS\" });\r\n    }\r\n    previousTimeRef.current = time;\r\n    requestRef.current = requestAnimationFrame(animate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    requestRef.current = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(requestRef.current);\r\n  }, [animate]);\r\n  useEffect(() => {\r\n    dispatch({ type: \"NEW_DOTS\" });\r\n  }, [props.width]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      const relativeX = e.clientX / window.innerWidth;\r\n      const yRot = 40 * relativeX - 20;\r\n      const relativeY = e.clientY / window.innerHeight;\r\n      //0=60 1=70\r\n      //60 to 70\r\n      const xRot = -10 * relativeY + 70;\r\n      dispatch({ type: \"CHANGE_ROTATION\", payload: { yRot, xRot } });\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"perlin-frame\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: `${width * 1.8}px`,\r\n          backgroundColor: \"black\",\r\n          boxShadow: \"0 0 50px 50px black\",\r\n          overflow: \"hidden\",\r\n          zIndex: \"-1\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"dot-container\"\r\n          style={{\r\n            position: \"relative\",\r\n            margin: \"1rem auto\",\r\n            perspective: `${width}px`,\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n          }}\r\n        >\r\n          <div\r\n            className=\"dot plane\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              transform: `rotateY(${state.yRot}deg) rotateX(${\r\n                state.xRot //+65?\r\n              }deg) translateZ(${height / 3}px) translateY(${height / 2}px)`,\r\n              transformStyle: \"preserve-3d\",\r\n              zIndex: \"0\",\r\n            }}\r\n          >\r\n            {state.dots.length > 0 &&\r\n              state.dots.map((dot, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"dot\"\r\n                    key={`dot-${index}`}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: dot.x,\r\n                      top: dot.y,\r\n                      backgroundColor: `hsl(${dot.h}, 50%, ${dot.l}%)`,\r\n                      boxShadow: `0 0 ${dot.size + 1}px 1px hsl(${\r\n                        dot.h\r\n                      }, 75%, ${dot.l}%)`,\r\n                      width: `${dot.size}px`,\r\n                      height: `${dot.size}px`,\r\n                      borderRadius: \"50%\",\r\n                      transform: `translateZ(${dot.z}px)`,\r\n                      transformStyle: \"preserve-3d\",\r\n                    }}\r\n                  ></div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundImage:\r\n              \"linear-gradient(to right, black 0, transparent 10%, transparent 90%, black 100%\",\r\n            zIndex: \"2\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nPerlin.defaultProps = {\r\n  density: 2,\r\n  width: 600,\r\n  height: 300,\r\n  zMax: 12,\r\n};\r\nexport default Perlin;\r\n","import Perlin from \"./components/Perlin.js\";\r\n// import Sound from \"./components/Sound.js\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\nfunction App() {\r\n  const [width, setWidth] = useState(window.innerWidth / 2);\r\n  const [noise, setNoise] = useState();\r\n  window.onresize = () => {\r\n    window.innerWidth < 1200 && setWidth(window.innerWidth / 2);\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Perlin {...{ density: 6, width: 800, height: 800 }}/> */}\r\n      <h1>Perlin Noise Landscape</h1>\r\n      <Perlin width={width} setNoise={setNoise} />\r\n      {/* <Sound noise={noise}/> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}